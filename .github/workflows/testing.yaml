name: Code Quality and Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  code-analysis:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    # Poetry installation
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: false
        installer-parallel: true

    - name: Install project dependencies
      run: poetry install --no-interaction --no-root

    # Linters (existing)
    - name: Run Ruff
      run: poetry run ruff check ./app

    - name: Run Flake8
      run: poetry run flake8 ./app

    - name: Run Bandit
      run: poetry run bandit -r ./app -c .bandit.yml

    # Updated Snyk integration
    - name: Setup Snyk
      uses: snyk/actions/setup@master

    - name: Run Snyk security scan
      run: snyk test --file=poetry.lock --package-manager=poetry
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}